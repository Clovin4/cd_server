- name: Install/Manage Dokploy
  hosts: all
  become: true
  gather_facts: true

  vars:
    dokploy_install_dir: /usr/local/src
    dokploy_installer_url: https://dokploy.com/install.sh
    dokploy_installer_path: "{{ dokploy_install_dir }}/dokploy-install.sh"
    dokploy_marker: /var/lib/dokploy/.installed
    dokploy_open_firewall: true
    dokploy_firewall_ports: [80, 443, 3000]
    dokploy_wait_port: 3000
    dokploy_upgrade: false
    # If you want to remove the CI key after bootstrap, set to true
    remove_ci_key_after_bootstrap: false

  tasks:
    - name: Base deps
      apt:
        name: [ca-certificates, curl, ufw]
        state: present
        update_cache: yes

    - name: Create install & marker dirs
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ dokploy_install_dir }}"
        - "{{ dokploy_marker | dirname }}"

    - name: Download Dokploy installer
      get_url:
        url: "{{ dokploy_installer_url }}"
        dest: "{{ dokploy_installer_path }}"
        mode: '0755'
      force: yes

    - name: Install Dokploy (first time only)
      command: "sh {{ dokploy_installer_path }}"
      args:
        creates: "{{ dokploy_marker }}"

    - name: Mark installation complete
      copy:
        dest: "{{ dokploy_marker }}"
        content: "{{ ansible_date_time.iso8601 }}"
        mode: '0644'

    - name: Upgrade Dokploy (on demand)
      command: "sh {{ dokploy_installer_path }} update"
      when: dokploy_upgrade | bool
      tags: [upgrade]

    - name: Open firewall (optional)
      when: dokploy_open_firewall | bool
      block:
        - name: Ensure UFW enabled
          ufw:
            state: enabled
            policy: allow
        - name: Allow ports
          ufw:
            rule: allow
            port: "{{ item }}"
            proto: tcp
          loop: "{{ dokploy_firewall_ports }}"

    - name: Wait for Dokploy UI (best effort)
      wait_for:
        host: "127.0.0.1"
        port: "{{ dokploy_wait_port }}"
        timeout: 180
        state: started
      ignore_errors: true

    # (Optional) Remove the CI key from authorized_keys after bootstrap
    # Only if you want to leave just your personal key.
    - name: Remove CI key from root authorized_keys (optional)
      authorized_key:
        user: root
        state: absent
        key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/gha.pub') }}"
      when: remove_ci_key_after_bootstrap | bool
      tags: [harden]
